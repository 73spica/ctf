import requests
from base64 import b64encode
from bs4 import BeautifulSoup

all_cipher = ""

def get_dec(url,i,cookie_f=0,pre_cipher = "",block_size = 32):
    global all_cipher
    target_cipher = all_cipher[i:i+block_size]
    values = {
        'cipher' : target_cipher
    }
    if cookie_f == 1:
        iv = b64encode(pre_cipher.decode("hex"))
        # print iv
        cookies = dict(iv=iv)
        r = requests.post(url,data=values,cookies=cookies)
    else:
        r = requests.post(url,data=values)
    # print r.text
    pre_cipher = target_cipher
    soup = BeautifulSoup(r.text,"lxml")
    ko = soup.find("div",id="result")
    plain = ko.string
    return plain,pre_cipher

def main():
    all_plain = ""
    block_size = 32
    url = u"http://127.0.0.1:12345/cgi-bin/problem.py"
    # url = u"http://ec2-52-193-204-166.ap-northeast-1.compute.amazonaws.com:12345/cgi-bin/problem.py"
    plain,pre_cipher = get_dec(url,0)
    print plain
    all_plain += plain
    i=block_size
    while True:
        if i>=len(all_cipher)-1:
            break
        plain,pre_cipher = get_dec(url,i,1,pre_cipher)
        print plain
        all_plain += plain
        i+=32

    print all_plain

if __name__ == '__main__':
    main()
